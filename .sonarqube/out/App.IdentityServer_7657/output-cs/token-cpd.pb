‘
4D:\Dev\AspNetCoreTestes\App.IdentityServer\Config.cs
	namespace 	
App
 
. 
IdentityServer 
{ 
public 

class 
Config 
{ 
public		 
static		 
IEnumerable		 !
<		! "
ApiResource		" -
>		- .
GetApiResources		/ >
(		> ?
)		? @
{

 	
return 
new 
List 
< 
ApiResource '
>' (
{ 
new 
ApiResource 
(  
$str  ,
,, -
$str. <
)< =
} 
; 
} 	
public 
static 
IEnumerable !
<! "
Client" (
>( )

GetClients* 4
(4 5
)5 6
{ 	
return 
new 
List 
< 
Client "
>" #
{ 
new 
Client 
{ 
ClientId 
= 
$str '
,' (
AllowedGrantTypes %
=& '

GrantTypes( 2
.2 3
ClientCredentials3 D
,D E
ClientSecrets !
=" #
{ 
new 
Secret "
(" #
$str# 9
.9 :
Sha256: @
(@ A
)A B
)B C
} 
, 
AllowedScopes !
=" #
{$ %
$str& 2
}3 4
}   
}!! 
;!! 
}"" 	
}## 
}$$ å

5D:\Dev\AspNetCoreTestes\App.IdentityServer\Program.cs
	namespace 	
App
 
. 
IdentityServer 
{ 
public 

class 
Program 
{ 
public		 
static		 
void		 
Main		 
(		  
string		  &
[		& '
]		' (
args		) -
)		- .
{

 	
Console 
. 
Title 
= 
$str 5
;5 6
var 
host 
= 
new 
WebHostBuilder )
() *
)* +
. 

UseKestrel 
( 
) 
. 
UseUrls 
( 
$str 0
)0 1
. 
UseContentRoot 
(  
	Directory  )
.) *
GetCurrentDirectory* =
(= >
)> ?
)? @
. 
UseIISIntegration "
(" #
)# $
. 

UseStartup 
< 
Startup #
># $
($ %
)% &
. 
Build 
( 
) 
; 
host 
. 
Run 
( 
) 
; 
} 	
} 
} ½

5D:\Dev\AspNetCoreTestes\App.IdentityServer\Startup.cs
	namespace 	
App
 
. 
IdentityServer 
{ 
public 

class 
Startup 
{		 
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
} 	
public 
void 
	Configure 
( 
IApplicationBuilder 1
app2 5
,5 6
IHostingEnvironment7 J
envK N
)N O
{ 	
if 
( 
env 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. %
UseDeveloperExceptionPage -
(- .
). /
;/ 0
} 
app 
. 
Run 
( 
async 
( 
context "
)" #
=>$ &
{ 
await 
context 
. 
Response &
.& '

WriteAsync' 1
(1 2
$str2 @
)@ A
;A B
} 
) 
; 
} 	
} 
} 